/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FollowerModel
 */
export interface FollowerModel {
    /**
     * 用户ID
     * @type {number}
     * @memberof FollowerModel
     */
    id?: number;
    /**
     * 目标用户ID
     * @type {number}
     * @memberof FollowerModel
     */
    targetUserID?: number;
    /**
     * 别名
     * @type {string}
     * @memberof FollowerModel
     */
    alias?: string | null;
    /**
     * 昵称
     * @type {string}
     * @memberof FollowerModel
     */
    nickName?: string | null;
    /**
     * 头像
     * @type {string}
     * @memberof FollowerModel
     */
    avatar?: string | null;
    /**
     * 是否互相关注
     * @type {boolean}
     * @memberof FollowerModel
     */
    isMutual?: boolean;
    /**
     * 亲密度分数
     * @type {number}
     * @memberof FollowerModel
     */
    closenessScore?: number;
    /**
     * 关注度分数
     * @type {number}
     * @memberof FollowerModel
     */
    attentionScore?: number;
    /**
     * 标签
     * @type {string}
     * @memberof FollowerModel
     */
    tags?: string | null;
    /**
     * 状态
     * @type {string}
     * @memberof FollowerModel
     */
    status?: string | null;
    /**
     * 备注
     * @type {string}
     * @memberof FollowerModel
     */
    remark?: string | null;
    /**
     * 创建日期
     * @type {Date}
     * @memberof FollowerModel
     */
    createDate?: Date;
}

/**
 * Check if a given object implements the FollowerModel interface.
 */
export function instanceOfFollowerModel(value: object): value is FollowerModel {
    return true;
}

export function FollowerModelFromJSON(json: any): FollowerModel {
    return FollowerModelFromJSONTyped(json, false);
}

export function FollowerModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FollowerModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'targetUserID': json['targetUserID'] == null ? undefined : json['targetUserID'],
        'alias': json['alias'] == null ? undefined : json['alias'],
        'nickName': json['nickName'] == null ? undefined : json['nickName'],
        'avatar': json['avatar'] == null ? undefined : json['avatar'],
        'isMutual': json['isMutual'] == null ? undefined : json['isMutual'],
        'closenessScore': json['closenessScore'] == null ? undefined : json['closenessScore'],
        'attentionScore': json['attentionScore'] == null ? undefined : json['attentionScore'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'status': json['status'] == null ? undefined : json['status'],
        'remark': json['remark'] == null ? undefined : json['remark'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
    };
}

export function FollowerModelToJSON(json: any): FollowerModel {
    return FollowerModelToJSONTyped(json, false);
}

export function FollowerModelToJSONTyped(value?: FollowerModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'targetUserID': value['targetUserID'],
        'alias': value['alias'],
        'nickName': value['nickName'],
        'avatar': value['avatar'],
        'isMutual': value['isMutual'],
        'closenessScore': value['closenessScore'],
        'attentionScore': value['attentionScore'],
        'tags': value['tags'],
        'status': value['status'],
        'remark': value['remark'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
    };
}

