/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 货币交易记录实体，用于记录用户的货币交易详情。
 * @export
 * @interface CurrencyTransaction
 */
export interface CurrencyTransaction {
    /**
     * 货币交易记录的唯一标识符。
     * @type {number}
     * @memberof CurrencyTransaction
     */
    id?: number;
    /**
     * 发起交易的发送方用户ID，若为转账交易时必填。
     * @type {number}
     * @memberof CurrencyTransaction
     */
    fromUserID?: number;
    /**
     * 进行货币交易的用户ID。
     * @type {number}
     * @memberof CurrencyTransaction
     */
    userID?: number;
    /**
     * 货币交易的类型，例如 '消费', '奖励', '兑换', '转账' 等。
     * @type {string}
     * @memberof CurrencyTransaction
     */
    transactionType?: string | null;
    /**
     * 交易的货币类型，例如 'USD', 'CNY' 等。
     * @type {string}
     * @memberof CurrencyTransaction
     */
    currencyType?: string | null;
    /**
     * 货币的变动数量，正数表示增加，负数表示减少。
     * @type {number}
     * @memberof CurrencyTransaction
     */
    currencyChange?: number;
    /**
     * 交易完成后的货币余额。
     * @type {number}
     * @memberof CurrencyTransaction
     */
    currencyBalance?: number;
    /**
     * 描述货币变动的具体原因或相关交易详情。
     * @type {string}
     * @memberof CurrencyTransaction
     */
    description?: string | null;
    /**
     * 货币交易的当前状态，例如 '成功', '失败', '待审核' 等。
     * @type {string}
     * @memberof CurrencyTransaction
     */
    status?: string | null;
    /**
     * 交易的额外信息或管理员的备注。
     * @type {string}
     * @memberof CurrencyTransaction
     */
    remark?: string | null;
    /**
     * 用于分类或标记交易的标签。
     * @type {string}
     * @memberof CurrencyTransaction
     */
    tags?: string | null;
    /**
     * 货币交易发生的时间，默认为当前时间。
     * @type {Date}
     * @memberof CurrencyTransaction
     */
    createDate?: Date;
}

/**
 * Check if a given object implements the CurrencyTransaction interface.
 */
export function instanceOfCurrencyTransaction(value: object): value is CurrencyTransaction {
    return true;
}

export function CurrencyTransactionFromJSON(json: any): CurrencyTransaction {
    return CurrencyTransactionFromJSONTyped(json, false);
}

export function CurrencyTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrencyTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fromUserID': json['fromUserID'] == null ? undefined : json['fromUserID'],
        'userID': json['userID'] == null ? undefined : json['userID'],
        'transactionType': json['transactionType'] == null ? undefined : json['transactionType'],
        'currencyType': json['currencyType'] == null ? undefined : json['currencyType'],
        'currencyChange': json['currencyChange'] == null ? undefined : json['currencyChange'],
        'currencyBalance': json['currencyBalance'] == null ? undefined : json['currencyBalance'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'] == null ? undefined : json['status'],
        'remark': json['remark'] == null ? undefined : json['remark'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
    };
}

export function CurrencyTransactionToJSON(json: any): CurrencyTransaction {
    return CurrencyTransactionToJSONTyped(json, false);
}

export function CurrencyTransactionToJSONTyped(value?: CurrencyTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fromUserID': value['fromUserID'],
        'userID': value['userID'],
        'transactionType': value['transactionType'],
        'currencyType': value['currencyType'],
        'currencyChange': value['currencyChange'],
        'currencyBalance': value['currencyBalance'],
        'description': value['description'],
        'status': value['status'],
        'remark': value['remark'],
        'tags': value['tags'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
    };
}

