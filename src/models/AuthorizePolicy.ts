/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 鉴权策略实体，用于定义和管理系统的鉴权规则。
 * @export
 * @interface AuthorizePolicy
 */
export interface AuthorizePolicy {
    /**
     * 鉴权策略的唯一标识符。
     * @type {number}
     * @memberof AuthorizePolicy
     */
    id?: number;
    /**
     * 鉴权策略的名称。根据鉴权类型填写不同的名称：角色类型填写角色名称，用户类型填写用户ID，访问令牌类型填写令牌ID。
     * @type {string}
     * @memberof AuthorizePolicy
     */
    policyName?: string | null;
    /**
     * 鉴权策略的类型，可选值为 'access_token', 'user', 或 'role'。
     * @type {string}
     * @memberof AuthorizePolicy
     */
    authorizeType?: string | null;
    /**
     * 与鉴权策略关联的权限集合，多个权限可以用逗号分隔。
     * @type {string}
     * @memberof AuthorizePolicy
     */
    policyValue?: string | null;
    /**
     * 鉴权策略的创建日期，默认为当前时间。
     * @type {Date}
     * @memberof AuthorizePolicy
     */
    createDate?: Date;
    /**
     * 鉴权策略的最后更新日期，默认为当前时间。
     * @type {Date}
     * @memberof AuthorizePolicy
     */
    lastUpdate?: Date;
}

/**
 * Check if a given object implements the AuthorizePolicy interface.
 */
export function instanceOfAuthorizePolicy(value: object): value is AuthorizePolicy {
    return true;
}

export function AuthorizePolicyFromJSON(json: any): AuthorizePolicy {
    return AuthorizePolicyFromJSONTyped(json, false);
}

export function AuthorizePolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthorizePolicy {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'policyName': json['policyName'] == null ? undefined : json['policyName'],
        'authorizeType': json['authorizeType'] == null ? undefined : json['authorizeType'],
        'policyValue': json['policyValue'] == null ? undefined : json['policyValue'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
        'lastUpdate': json['lastUpdate'] == null ? undefined : (new Date(json['lastUpdate'])),
    };
}

export function AuthorizePolicyToJSON(json: any): AuthorizePolicy {
    return AuthorizePolicyToJSONTyped(json, false);
}

export function AuthorizePolicyToJSONTyped(value?: AuthorizePolicy | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'policyName': value['policyName'],
        'authorizeType': value['authorizeType'],
        'policyValue': value['policyValue'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
        'lastUpdate': value['lastUpdate'] == null ? undefined : ((value['lastUpdate']).toISOString()),
    };
}

