/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 服务配置项实体，用于定义和管理服务相关的配置信息。
 * @export
 * @interface ServiceItem
 */
export interface ServiceItem {
    /**
     * 服务配置项的唯一标识符。
     * @type {number}
     * @memberof ServiceItem
     */
    id?: number;
    /**
     * 服务配置项所属的业务代码，用于分类管理。
     * @type {string}
     * @memberof ServiceItem
     */
    bizCode?: string | null;
    /**
     * 关联的服务商代码，用于标识提供该配置项的服务商。
     * @type {string}
     * @memberof ServiceItem
     */
    providerCode?: string | null;
    /**
     * 服务配置项所属的功能分组代码，用于组织和管理相关配置项。
     * @type {string}
     * @memberof ServiceItem
     */
    groupCode?: string | null;
    /**
     * 服务配置项的名称，用于描述其功能或用途。
     * @type {string}
     * @memberof ServiceItem
     */
    name?: string | null;
    /**
     * 服务配置项的唯一代码，用于系统内部标识。
     * @type {string}
     * @memberof ServiceItem
     */
    code?: string | null;
    /**
     * 服务配置项的值类型，例如 'text', 'number', 'boolean' 等。默认为 'text'。
     * @type {string}
     * @memberof ServiceItem
     */
    valueType?: string | null;
    /**
     * 服务配置项的图标URL或路径，用于在界面上显示。
     * @type {string}
     * @memberof ServiceItem
     */
    icon?: string | null;
    /**
     * 服务配置项的默认值，当未设置具体值时使用。
     * @type {string}
     * @memberof ServiceItem
     */
    valueDefaults?: string | null;
    /**
     * 服务配置项的详细描述信息，用于说明其用途和配置方法。
     * @type {string}
     * @memberof ServiceItem
     */
    description?: string | null;
    /**
     * 用于分类或标记服务配置项的标签。
     * @type {string}
     * @memberof ServiceItem
     */
    tags?: string | null;
    /**
     * 指示该配置项是否为系统级别的配置项，默认为 false。
     * @type {boolean}
     * @memberof ServiceItem
     */
    isSystem?: boolean;
    /**
     * 指示服务配置项是否在界面上显示，默认为 true。
     * @type {boolean}
     * @memberof ServiceItem
     */
    show?: boolean;
    /**
     * 服务配置项在界面上的显示顺序。
     * @type {number}
     * @memberof ServiceItem
     */
    showIndex?: number;
    /**
     * 服务配置项的创建日期，默认为当前时间。
     * @type {Date}
     * @memberof ServiceItem
     */
    createDate?: Date;
    /**
     * 服务配置项的最后更新日期，默认为当前时间。
     * @type {Date}
     * @memberof ServiceItem
     */
    lastUpdate?: Date;
}

/**
 * Check if a given object implements the ServiceItem interface.
 */
export function instanceOfServiceItem(value: object): value is ServiceItem {
    return true;
}

export function ServiceItemFromJSON(json: any): ServiceItem {
    return ServiceItemFromJSONTyped(json, false);
}

export function ServiceItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'bizCode': json['bizCode'] == null ? undefined : json['bizCode'],
        'providerCode': json['providerCode'] == null ? undefined : json['providerCode'],
        'groupCode': json['groupCode'] == null ? undefined : json['groupCode'],
        'name': json['name'] == null ? undefined : json['name'],
        'code': json['code'] == null ? undefined : json['code'],
        'valueType': json['valueType'] == null ? undefined : json['valueType'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'valueDefaults': json['valueDefaults'] == null ? undefined : json['valueDefaults'],
        'description': json['description'] == null ? undefined : json['description'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'isSystem': json['isSystem'] == null ? undefined : json['isSystem'],
        'show': json['show'] == null ? undefined : json['show'],
        'showIndex': json['showIndex'] == null ? undefined : json['showIndex'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
        'lastUpdate': json['lastUpdate'] == null ? undefined : (new Date(json['lastUpdate'])),
    };
}

export function ServiceItemToJSON(json: any): ServiceItem {
    return ServiceItemToJSONTyped(json, false);
}

export function ServiceItemToJSONTyped(value?: ServiceItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'bizCode': value['bizCode'],
        'providerCode': value['providerCode'],
        'groupCode': value['groupCode'],
        'name': value['name'],
        'code': value['code'],
        'valueType': value['valueType'],
        'icon': value['icon'],
        'valueDefaults': value['valueDefaults'],
        'description': value['description'],
        'tags': value['tags'],
        'isSystem': value['isSystem'],
        'show': value['show'],
        'showIndex': value['showIndex'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
        'lastUpdate': value['lastUpdate'] == null ? undefined : ((value['lastUpdate']).toISOString()),
    };
}

