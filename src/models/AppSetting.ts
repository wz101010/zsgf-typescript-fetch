/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 应用设置
 * @export
 * @interface AppSetting
 */
export interface AppSetting {
    /**
     * 唯一标识
     * @type {number}
     * @memberof AppSetting
     */
    id?: number;
    /**
     * 提供商代码
     * @type {string}
     * @memberof AppSetting
     */
    providerCode?: string | null;
    /**
     * 分组代码
     * @type {string}
     * @memberof AppSetting
     */
    groupCode?: string | null;
    /**
     * 设置项代码
     * @type {string}
     * @memberof AppSetting
     */
    code: string;
    /**
     * 设置值
     * @type {string}
     * @memberof AppSetting
     */
    value: string;
    /**
     * 标签
     * @type {string}
     * @memberof AppSetting
     */
    tags?: string | null;
    /**
     * 描述
     * @type {string}
     * @memberof AppSetting
     */
    description?: string | null;
    /**
     * 是否在前端可用
     * @type {boolean}
     * @memberof AppSetting
     */
    frontendUsable?: boolean;
    /**
     * 创建时间
     * @type {Date}
     * @memberof AppSetting
     */
    createDate?: Date;
    /**
     * 最后更新时间
     * @type {Date}
     * @memberof AppSetting
     */
    lastUpdate?: Date;
}

/**
 * Check if a given object implements the AppSetting interface.
 */
export function instanceOfAppSetting(value: object): value is AppSetting {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function AppSettingFromJSON(json: any): AppSetting {
    return AppSettingFromJSONTyped(json, false);
}

export function AppSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppSetting {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'providerCode': json['providerCode'] == null ? undefined : json['providerCode'],
        'groupCode': json['groupCode'] == null ? undefined : json['groupCode'],
        'code': json['code'],
        'value': json['value'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'description': json['description'] == null ? undefined : json['description'],
        'frontendUsable': json['frontendUsable'] == null ? undefined : json['frontendUsable'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
        'lastUpdate': json['lastUpdate'] == null ? undefined : (new Date(json['lastUpdate'])),
    };
}

export function AppSettingToJSON(json: any): AppSetting {
    return AppSettingToJSONTyped(json, false);
}

export function AppSettingToJSONTyped(value?: AppSetting | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'providerCode': value['providerCode'],
        'groupCode': value['groupCode'],
        'code': value['code'],
        'value': value['value'],
        'tags': value['tags'],
        'description': value['description'],
        'frontendUsable': value['frontendUsable'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
        'lastUpdate': value['lastUpdate'] == null ? undefined : ((value['lastUpdate']).toISOString()),
    };
}

