/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 用户
 * @export
 * @interface User
 */
export interface User {
    /**
     * 用户唯一标识
     * @type {number}
     * @memberof User
     */
    id?: number;
    /**
     * 用户所在平台
     * @type {string}
     * @memberof User
     */
    platform?: string | null;
    /**
     * 用户所在平台的唯一标识
     * @type {string}
     * @memberof User
     */
    unionID?: string | null;
    /**
     * 昵称
     * @type {string}
     * @memberof User
     */
    nickName?: string | null;
    /**
     * 头像
     * @type {string}
     * @memberof User
     */
    avatar?: string | null;
    /**
     * 其他数据
     * @type {string}
     * @memberof User
     */
    data?: string | null;
    /**
     * 用户名
     * @type {string}
     * @memberof User
     */
    userName?: string | null;
    /**
     * 用户密码
     * @type {string}
     * @memberof User
     */
    pwd?: string | null;
    /**
     * 邮箱地址
     * @type {string}
     * @memberof User
     */
    email?: string | null;
    /**
     * 邮箱已验证
     * @type {boolean}
     * @memberof User
     */
    emailIsValid?: boolean;
    /**
     * 手机号码
     * @type {string}
     * @memberof User
     */
    phone?: string | null;
    /**
     * 手机号码已验证
     * @type {boolean}
     * @memberof User
     */
    phoneIsValid?: boolean;
    /**
     * 关系链
     * @type {string}
     * @memberof User
     */
    relationChain?: string | null;
    /**
     * 兴趣标签
     * @type {string}
     * @memberof User
     */
    interestTags?: string | null;
    /**
     * 个人简介
     * @type {string}
     * @memberof User
     */
    biography?: string | null;
    /**
     * 性别
     * @type {string}
     * @memberof User
     */
    gender?: string | null;
    /**
     * 生日
     * @type {Date}
     * @memberof User
     */
    birthday?: Date | null;
    /**
     * 职业
     * @type {string}
     * @memberof User
     */
    occupation?: string | null;
    /**
     * 学历
     * @type {string}
     * @memberof User
     */
    education?: string | null;
    /**
     * 联系方式
     * @type {string}
     * @memberof User
     */
    contact?: string | null;
    /**
     * 语言
     * @type {string}
     * @memberof User
     */
    languages?: string | null;
    /**
     * 社交网络链接
     * @type {string}
     * @memberof User
     */
    socialLinks?: string | null;
    /**
     * 婚姻状态
     * @type {string}
     * @memberof User
     */
    relationshipStatus?: string | null;
    /**
     * 公司
     * @type {string}
     * @memberof User
     */
    company?: string | null;
    /**
     * 行业
     * @type {string}
     * @memberof User
     */
    industry?: string | null;
    /**
     * 行业职位
     * @type {string}
     * @memberof User
     */
    companyPosition?: string | null;
    /**
     * 私密设置
     * @type {string}
     * @memberof User
     */
    privateSettings?: string | null;
    /**
     * 账户是否锁定
     * @type {boolean}
     * @memberof User
     */
    isLock?: boolean;
    /**
     * 账户锁定截止时间
     * @type {Date}
     * @memberof User
     */
    lockUntil?: Date;
    /**
     * 能使用用户名登录
     * @type {boolean}
     * @memberof User
     */
    enableUserNameSignIn?: boolean;
    /**
     * 能使用邮箱登录
     * @type {boolean}
     * @memberof User
     */
    enableEmailSignIn?: boolean;
    /**
     * 能使用电话号码登录
     * @type {boolean}
     * @memberof User
     */
    enablePhoneSignIn?: boolean;
    /**
     * 能使用联合身份标识登录
     * @type {boolean}
     * @memberof User
     */
    enableUnionIDSignIn?: boolean;
    /**
     * 能使用OAuth认证方式登录
     * @type {boolean}
     * @memberof User
     */
    enableOAuth?: boolean;
    /**
     * 启用双因素认证登录
     * @type {boolean}
     * @memberof User
     */
    enable2FAAuth?: boolean;
    /**
     * 创建时间
     * @type {Date}
     * @memberof User
     */
    createDate?: Date;
    /**
     * 最后更新时间
     * @type {Date}
     * @memberof User
     */
    lastUpdate?: Date;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'platform': json['platform'] == null ? undefined : json['platform'],
        'unionID': json['unionID'] == null ? undefined : json['unionID'],
        'nickName': json['nickName'] == null ? undefined : json['nickName'],
        'avatar': json['avatar'] == null ? undefined : json['avatar'],
        'data': json['data'] == null ? undefined : json['data'],
        'userName': json['userName'] == null ? undefined : json['userName'],
        'pwd': json['pwd'] == null ? undefined : json['pwd'],
        'email': json['email'] == null ? undefined : json['email'],
        'emailIsValid': json['emailIsValid'] == null ? undefined : json['emailIsValid'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'phoneIsValid': json['phoneIsValid'] == null ? undefined : json['phoneIsValid'],
        'relationChain': json['relationChain'] == null ? undefined : json['relationChain'],
        'interestTags': json['interestTags'] == null ? undefined : json['interestTags'],
        'biography': json['biography'] == null ? undefined : json['biography'],
        'gender': json['gender'] == null ? undefined : json['gender'],
        'birthday': json['birthday'] == null ? undefined : (new Date(json['birthday'])),
        'occupation': json['occupation'] == null ? undefined : json['occupation'],
        'education': json['education'] == null ? undefined : json['education'],
        'contact': json['contact'] == null ? undefined : json['contact'],
        'languages': json['languages'] == null ? undefined : json['languages'],
        'socialLinks': json['socialLinks'] == null ? undefined : json['socialLinks'],
        'relationshipStatus': json['relationshipStatus'] == null ? undefined : json['relationshipStatus'],
        'company': json['company'] == null ? undefined : json['company'],
        'industry': json['industry'] == null ? undefined : json['industry'],
        'companyPosition': json['companyPosition'] == null ? undefined : json['companyPosition'],
        'privateSettings': json['privateSettings'] == null ? undefined : json['privateSettings'],
        'isLock': json['isLock'] == null ? undefined : json['isLock'],
        'lockUntil': json['lockUntil'] == null ? undefined : (new Date(json['lockUntil'])),
        'enableUserNameSignIn': json['enableUserNameSignIn'] == null ? undefined : json['enableUserNameSignIn'],
        'enableEmailSignIn': json['enableEmailSignIn'] == null ? undefined : json['enableEmailSignIn'],
        'enablePhoneSignIn': json['enablePhoneSignIn'] == null ? undefined : json['enablePhoneSignIn'],
        'enableUnionIDSignIn': json['enableUnionIDSignIn'] == null ? undefined : json['enableUnionIDSignIn'],
        'enableOAuth': json['enableOAuth'] == null ? undefined : json['enableOAuth'],
        'enable2FAAuth': json['enable2FAAuth'] == null ? undefined : json['enable2FAAuth'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
        'lastUpdate': json['lastUpdate'] == null ? undefined : (new Date(json['lastUpdate'])),
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'platform': value['platform'],
        'unionID': value['unionID'],
        'nickName': value['nickName'],
        'avatar': value['avatar'],
        'data': value['data'],
        'userName': value['userName'],
        'pwd': value['pwd'],
        'email': value['email'],
        'emailIsValid': value['emailIsValid'],
        'phone': value['phone'],
        'phoneIsValid': value['phoneIsValid'],
        'relationChain': value['relationChain'],
        'interestTags': value['interestTags'],
        'biography': value['biography'],
        'gender': value['gender'],
        'birthday': value['birthday'] == null ? undefined : ((value['birthday'] as any).toISOString()),
        'occupation': value['occupation'],
        'education': value['education'],
        'contact': value['contact'],
        'languages': value['languages'],
        'socialLinks': value['socialLinks'],
        'relationshipStatus': value['relationshipStatus'],
        'company': value['company'],
        'industry': value['industry'],
        'companyPosition': value['companyPosition'],
        'privateSettings': value['privateSettings'],
        'isLock': value['isLock'],
        'lockUntil': value['lockUntil'] == null ? undefined : ((value['lockUntil']).toISOString()),
        'enableUserNameSignIn': value['enableUserNameSignIn'],
        'enableEmailSignIn': value['enableEmailSignIn'],
        'enablePhoneSignIn': value['enablePhoneSignIn'],
        'enableUnionIDSignIn': value['enableUnionIDSignIn'],
        'enableOAuth': value['enableOAuth'],
        'enable2FAAuth': value['enable2FAAuth'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
        'lastUpdate': value['lastUpdate'] == null ? undefined : ((value['lastUpdate']).toISOString()),
    };
}

