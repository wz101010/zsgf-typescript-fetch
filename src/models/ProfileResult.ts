/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProfileResult
 */
export interface ProfileResult {
    /**
     * 
     * @type {number}
     * @memberof ProfileResult
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    unionID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    phone?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ProfileResult
     */
    createDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    userName?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileResult
     */
    phoneIsValid?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    data?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    email?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileResult
     */
    emailIsValid?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ProfileResult
     */
    lastUpdate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    nickName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    avatar?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    role?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileResult
     */
    permission?: string | null;
}

/**
 * Check if a given object implements the ProfileResult interface.
 */
export function instanceOfProfileResult(value: object): value is ProfileResult {
    return true;
}

export function ProfileResultFromJSON(json: any): ProfileResult {
    return ProfileResultFromJSONTyped(json, false);
}

export function ProfileResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'unionID': json['unionID'] == null ? undefined : json['unionID'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
        'userName': json['userName'] == null ? undefined : json['userName'],
        'phoneIsValid': json['phoneIsValid'] == null ? undefined : json['phoneIsValid'],
        'data': json['data'] == null ? undefined : json['data'],
        'email': json['email'] == null ? undefined : json['email'],
        'emailIsValid': json['emailIsValid'] == null ? undefined : json['emailIsValid'],
        'lastUpdate': json['lastUpdate'] == null ? undefined : (new Date(json['lastUpdate'])),
        'nickName': json['nickName'] == null ? undefined : json['nickName'],
        'avatar': json['avatar'] == null ? undefined : json['avatar'],
        'role': json['role'] == null ? undefined : json['role'],
        'permission': json['permission'] == null ? undefined : json['permission'],
    };
}

export function ProfileResultToJSON(json: any): ProfileResult {
    return ProfileResultToJSONTyped(json, false);
}

export function ProfileResultToJSONTyped(value?: ProfileResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'unionID': value['unionID'],
        'phone': value['phone'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
        'userName': value['userName'],
        'phoneIsValid': value['phoneIsValid'],
        'data': value['data'],
        'email': value['email'],
        'emailIsValid': value['emailIsValid'],
        'lastUpdate': value['lastUpdate'] == null ? undefined : ((value['lastUpdate']).toISOString()),
        'nickName': value['nickName'],
        'avatar': value['avatar'],
        'role': value['role'],
        'permission': value['permission'],
    };
}

