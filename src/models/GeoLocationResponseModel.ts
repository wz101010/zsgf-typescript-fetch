/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GeoLocationResponseModel
 */
export interface GeoLocationResponseModel {
    /**
     * 地点的名称
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    locationName?: string | null;
    /**
     * 纬度
     * @type {number}
     * @memberof GeoLocationResponseModel
     */
    latitude: number;
    /**
     * 经度
     * @type {number}
     * @memberof GeoLocationResponseModel
     */
    longitude: number;
    /**
     * 地点的类型，如家庭、工作、学校等
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    locationType: string;
    /**
     * 收货人姓名
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    recipientName?: string | null;
    /**
     * 收货人联系电话
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    phoneNumber?: string | null;
    /**
     * 收货人电子邮件
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    email?: string | null;
    /**
     * 国家
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    country?: string | null;
    /**
     * 州/省
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    state?: string | null;
    /**
     * 城市
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    city?: string | null;
    /**
     * 区/县
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    district?: string | null;
    /**
     * 街道
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    street?: string | null;
    /**
     * 邮政编码
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    zipCode?: string | null;
    /**
     * 详细的地址信息
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    address?: string | null;
    /**
     * 地址类型，百度、高德、谷歌
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    mapType?: string | null;
    /**
     * 备注
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    remark?: string | null;
    /**
     * 标签
     * @type {string}
     * @memberof GeoLocationResponseModel
     */
    tags?: string | null;
    /**
     * 启用
     * @type {boolean}
     * @memberof GeoLocationResponseModel
     */
    enable?: boolean | null;
    /**
     * 排序
     * @type {number}
     * @memberof GeoLocationResponseModel
     */
    showIndex?: number | null;
    /**
     * 创建时间
     * @type {Date}
     * @memberof GeoLocationResponseModel
     */
    createDate?: Date;
    /**
     * 最后更新的时间
     * @type {Date}
     * @memberof GeoLocationResponseModel
     */
    lastUpdate?: Date;
    /**
     * ID
     * @type {number}
     * @memberof GeoLocationResponseModel
     */
    id?: number;
}

/**
 * Check if a given object implements the GeoLocationResponseModel interface.
 */
export function instanceOfGeoLocationResponseModel(value: object): value is GeoLocationResponseModel {
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('locationType' in value) || value['locationType'] === undefined) return false;
    return true;
}

export function GeoLocationResponseModelFromJSON(json: any): GeoLocationResponseModel {
    return GeoLocationResponseModelFromJSONTyped(json, false);
}

export function GeoLocationResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeoLocationResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'locationName': json['locationName'] == null ? undefined : json['locationName'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'locationType': json['locationType'],
        'recipientName': json['recipientName'] == null ? undefined : json['recipientName'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'email': json['email'] == null ? undefined : json['email'],
        'country': json['country'] == null ? undefined : json['country'],
        'state': json['state'] == null ? undefined : json['state'],
        'city': json['city'] == null ? undefined : json['city'],
        'district': json['district'] == null ? undefined : json['district'],
        'street': json['street'] == null ? undefined : json['street'],
        'zipCode': json['zipCode'] == null ? undefined : json['zipCode'],
        'address': json['address'] == null ? undefined : json['address'],
        'mapType': json['mapType'] == null ? undefined : json['mapType'],
        'remark': json['remark'] == null ? undefined : json['remark'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'enable': json['enable'] == null ? undefined : json['enable'],
        'showIndex': json['showIndex'] == null ? undefined : json['showIndex'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
        'lastUpdate': json['lastUpdate'] == null ? undefined : (new Date(json['lastUpdate'])),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function GeoLocationResponseModelToJSON(json: any): GeoLocationResponseModel {
    return GeoLocationResponseModelToJSONTyped(json, false);
}

export function GeoLocationResponseModelToJSONTyped(value?: GeoLocationResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'locationName': value['locationName'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'locationType': value['locationType'],
        'recipientName': value['recipientName'],
        'phoneNumber': value['phoneNumber'],
        'email': value['email'],
        'country': value['country'],
        'state': value['state'],
        'city': value['city'],
        'district': value['district'],
        'street': value['street'],
        'zipCode': value['zipCode'],
        'address': value['address'],
        'mapType': value['mapType'],
        'remark': value['remark'],
        'tags': value['tags'],
        'enable': value['enable'],
        'showIndex': value['showIndex'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
        'lastUpdate': value['lastUpdate'] == null ? undefined : ((value['lastUpdate']).toISOString()),
        'id': value['id'],
    };
}

