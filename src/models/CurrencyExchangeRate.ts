/* tslint:disable */
/* eslint-disable */
/**
 * 全部  API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 货币兑换比率实体，用于表示不同货币之间的兑换关系。
 * @export
 * @interface CurrencyExchangeRate
 */
export interface CurrencyExchangeRate {
    /**
     * 货币兑换比率的唯一标识符。
     * @type {number}
     * @memberof CurrencyExchangeRate
     */
    id?: number;
    /**
     * 兑换的源货币代码，例如 'USD'。
     * @type {string}
     * @memberof CurrencyExchangeRate
     */
    fromCurrencyCode?: string | null;
    /**
     * 兑换的目标货币代码，例如 'CNY'。
     * @type {string}
     * @memberof CurrencyExchangeRate
     */
    toCurrencyCode?: string | null;
    /**
     * 从源货币到目标货币的兑换比率。例如，1 USD = 6.5 CNY。
     * @type {number}
     * @memberof CurrencyExchangeRate
     */
    exchangeRate?: number;
    /**
     * 兑换比率的详细描述信息。
     * @type {string}
     * @memberof CurrencyExchangeRate
     */
    description?: string | null;
    /**
     * 货币兑换比率的创建日期，默认为当前时间。
     * @type {Date}
     * @memberof CurrencyExchangeRate
     */
    createDate?: Date;
    /**
     * 货币兑换比率的最后更新日期，默认为当前时间。
     * @type {Date}
     * @memberof CurrencyExchangeRate
     */
    lastUpdate?: Date;
}

/**
 * Check if a given object implements the CurrencyExchangeRate interface.
 */
export function instanceOfCurrencyExchangeRate(value: object): value is CurrencyExchangeRate {
    return true;
}

export function CurrencyExchangeRateFromJSON(json: any): CurrencyExchangeRate {
    return CurrencyExchangeRateFromJSONTyped(json, false);
}

export function CurrencyExchangeRateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrencyExchangeRate {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fromCurrencyCode': json['fromCurrencyCode'] == null ? undefined : json['fromCurrencyCode'],
        'toCurrencyCode': json['toCurrencyCode'] == null ? undefined : json['toCurrencyCode'],
        'exchangeRate': json['exchangeRate'] == null ? undefined : json['exchangeRate'],
        'description': json['description'] == null ? undefined : json['description'],
        'createDate': json['createDate'] == null ? undefined : (new Date(json['createDate'])),
        'lastUpdate': json['lastUpdate'] == null ? undefined : (new Date(json['lastUpdate'])),
    };
}

export function CurrencyExchangeRateToJSON(json: any): CurrencyExchangeRate {
    return CurrencyExchangeRateToJSONTyped(json, false);
}

export function CurrencyExchangeRateToJSONTyped(value?: CurrencyExchangeRate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fromCurrencyCode': value['fromCurrencyCode'],
        'toCurrencyCode': value['toCurrencyCode'],
        'exchangeRate': value['exchangeRate'],
        'description': value['description'],
        'createDate': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
        'lastUpdate': value['lastUpdate'] == null ? undefined : ((value['lastUpdate']).toISOString()),
    };
}

